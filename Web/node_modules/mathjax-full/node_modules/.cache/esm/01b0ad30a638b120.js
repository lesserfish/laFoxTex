let Loader,CONFIG,combineDefaults,dependencies,paths,provides,compatibility;_a63‍.w("./lib/startup.js");_a63‍.w("../../../js/components/loader.js",[["Loader",["Loader"],function(v){Loader=v}],["CONFIG",["CONFIG"],function(v){CONFIG=v}]]);_a63‍.w("../../../js/components/global.js",[["combineDefaults",["combineDefaults"],function(v){combineDefaults=v}]]);_a63‍.w("../dependencies.js",[["dependencies",["dependencies"],function(v){dependencies=v}],["paths",["paths"],function(v){paths=v}],["provides",["provides"],function(v){provides=v}],["compatibility",["compatibility"],function(v){compatibility=v}]]);





combineDefaults(MathJax.config.loader, 'dependencies', dependencies);
combineDefaults(MathJax.config.loader, 'paths', paths);
combineDefaults(MathJax.config.loader, 'provides', provides);
combineDefaults(MathJax.config.loader, 'source', compatibility);

Loader.preLoad('loader');

Loader.load(...CONFIG.load)
      .then(() => CONFIG.ready())
      .catch(error => CONFIG.failed(error));
